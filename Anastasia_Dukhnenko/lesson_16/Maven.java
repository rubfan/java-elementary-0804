public class Maven {
    public static void main(String[] args) {
        System.out.println("1. Что такое super pom?\n" +
                "Это родительский POM-файл, от которого наследуются все остальные, содержит значения, унаследованные по умолчанию.\n" +
                "\n" +
                "2. Для чего pom.xml?\n" +
                "Это специальный файл, который хранится в базовой директории проекта. Содержит информацию о проекте и различные детали конфигурации. В нём содержатся плагины и задачи. При сборке проекта, Maven получает отсюда необходимую информацию о сборке.\n" +
                "\n" +
                "3. Что такое артефакт?\n" +
                "Артефакт – это файл, обычно JAR, который развёртывается в хранилище Maven. Каждый артефакт имеет идентификатор группы, идентификатор артефакта и строку версии.\n" +
                "\n" +
                "4. Что такое фаза?\n" +
                "Когда Maven начинает сборку проекта, он проходит через определённую последовательность фаз и выполняет определённые задачи, которые указаны в каждой из фаз.\n" +
                "4 основных фазы:\n" +
                "- prepare-resources (копирование ресурсов)\n" +
                "- compile (компиляция)\n" +
                "- package (создание пакета)\n" +
                "- install (установка)\n" +
                " Каждая из этих фаз имеет фазы pre и post. Они могут быть использованы для регистрации задач, которые должны быть запущены перед и после указанной фазы.\n" +
                "\n" +
                "5. Что такое плагин?\n" +
                "Плагин — это дополнение (расширение возможностей) для какой-либо программы.\n" +
                "\n" +
                "6. Что такое гол?\n" +
                "Гол (от англ goal) -  это специальная задача, которая относится к сборке проекта и его управлению. Она может привязываться как к нескольким фазам, так и ни к одной. Задача, которая не привязана ни к одной фазе, может быть запущена вне фаз сборки с помощью прямого вызова.\n" +
                "\n" +
                "7. Что такое архетип?\n" +
                "Это шаблон проекта шаблона, из которого создаются другие проекты. С их помочью развивается стандартизация разработки проектов и ускорение загрузки проектов. \n" +
                "\n" +
                "\n" +
                "8. Что такое репозиторий maven и какие типы репозиториев вы знаете?\n" +
                "Это директория, где хранятся все библиотеки, JARники и всё, чем мы можем воспользоваться при сборке. \n" +
                "Существует три типа репозиториев :\n" +
                "- локальные\n" +
                "- центральные\n" +
                "- удалённые\n" +
                "\n" +
                "9. Из каких фаз состоит жизненый цикл clean, default и site?\n" +
                "clean – pre-clean, clean, post-clean\n" +
                "default – validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy\n" +
                "site - pre-site, site, post-site, site-deploy\n" +
                "\n" +
                "10. Обьясните что такое build profile?\n" +
                "Профиль сборки – это настройки, которые могут быть использованы для установки и перезаписи стандартных значений сборки Maven. \n" +
                "Типы профилей сборки:\n" +
                "- per project (pom.xml)\n" +
                "- per user (настройки Maven)\n" +
                "- global (глобальные настройки)\n" +
                "\n" +
                "11. Какой цели служат мейвен плагины?\n" +
                "- создания jar – файла\n" +
                "- создания war – файла\n" +
                "- компиляции кода файлов\n" +
                "- юнит-тестирования кода\n" +
                "- создание отчётов проекта\n" +
                "- создание документации проекта\n" +
                "\n" +
                "12. Раскажите о всех репозиториях куда попадает артефакт после сборки командой mvn deploy?\n" +
                "В локальный репозиторий, удалённый и локальную папку проекта.\n" +
                "\n" +
                "13. Что нужно(какие теги) для определения внешней зависимости?\n" +
                "Нужно определить groupId и artifactId таким же именем, как и имя файла, определить область видимости зависимости, как system, указать абсолютный путь к файлу.\n" +
                "\n" +
                "14. Какой командой создается скелет-шаблон проекта с помошью архетипа?\n" +
                "mvn archetype:generate\n" +
                "\n" +
                "15. Что означает транзитивная зависимость в мейвен?\n" +
                "Это артефакт, от которого зависит прямая зависимость проекта. Эта зависимость включает библиотеки, которые нужны для самой зависимости автоматически.\n" +
                "\n" +
                "16. Обьясните что такое область видимости зависимостей?\n" +
                "Область зависимости используется для указания видимости зависимости относительно разных фаз жизненного цикла.\n" +
                "Их всего шесть:\n" +
                "- compile (область по умолчанию)\n" +
                "- provided (используется во время сборки и тестирования проекта, нужно предоставить зависимость в ходе выполнения)\n" +
                "- runtime (зависимость не обязательна для компиляции, но для тестирования и запуска – да)\n" +
                "- test (зависимость не обязательна для нормального функционирования приложения)\n" +
                "- system (схоже с provided, но такая зависимость не извлекается из удалённого хранилища)\n" +
                "- import (используется в зависимости типа pom в <dependencyManagement> разделе и указывает на то, что указанный pom будет заменён)\n" +
                "\n" +
                "17. Как записать ссылку на property в pom.xml файле?\n" +
                "С помощью префикса «project» или «pom». \n" +
                "\n" +
                "18. Для чего нужен тег execution?\n" +
                "Он содержит информацию, необходимую для работы плагина.\n" +
                "\n" +
                "19. Что является полным именем артефакта? \n" +
                "<groupId> <artifactId> <version>\n" +
                "\n" +
                "20. Возможна ли сборка проекта без интернета и почему если Да или Нет?\n" +
                "Да, но только в случае, что всё необходимое есть в локальном репозитории. \n" +
                "\n" +
                "30. Какой командой запустить тесты\n" +
                "mvn test\n" +
                "\n" +
                "40. Какой командой запустить только один тест\n" +
                "mvn -Dtest=[класс]\n");
    }
}
