public class MavenHW14 {
    public static void main(String[] args) {
        System.out.println("1. Что такое super pom? \n" +
                "Super pom (Project Object Model) - это xml файл, который является родителем всех pom файлов," +
                "содержит базовую настройку конфигурации, обязательно имеет поля model, groupId, artifactId, version." +
                "(выкачивает начальные pom и jar файлы, описывает начальные артефакты " +
                "(плагины, зависимости и т.д) проекта).\n" +

                "2. Для чего pom.xml?\n" +
                "Наследует super pom и дополняет его зависимостями, которые нужны для сборки конкретно нашего проекта.\n" +

                "3. Что такое артефакт?\n" +
                "Файл с расширением .jar (в нашем случае) и представляет собой результат сборки проекта " +
                "(архив который вмещает в себя библиотеки, плагины и файлы). " +
                "Идентифицируется полями groupId, artifactId, version. \n" +

                "4. Что такое фаза?\n" +
                "Maven имеет жизненный цыкл проекта, который состоит из определенной последовательности фаз." +
                "Фаза может быть pre и post. Каждая фаза отвечает за выполнение определенной цели (goal).\n" +

                "5. Что такое плагин?\n" +
                "Это сборка нескольких goals, которые могут быть в разных фазах." +
                "Нам не обязательно выполнять все задачи плагина, можно их вызвать по отдельности. \n" +

                "6. Что такое гол?\n" +
                "Гол - это цель, к которой относится конкретная задача по сборке проекта." +
                "Не обязательно должна быть привязан к фазе." +
                "Если гол находится вне фазы – то её можно запустить с помощью прямого вызова.\n" +

                "7. Что такое архетип?\n" +
                "Архетип - это шаблон будущего проекта. Другими словами, абстракция шаблона проекта.\n" +

                "8. Что такое репозиторий maven и какие типы репозиториев вы знаете?\n" +
                "В мавене репозиторий это папка где хранятся все Джарники," +
                "библиотеки и плагины проекта которыми Мавен может воспользоваться. \n" +
                "Есть 3 типа реп:\n" +
                "Локальный – на нашем компьютере. Доступный только для себя\n" +
                "Центральный – хранит наиболее используемые библиотеки," +
                "если мавен не может найти подходящую библиотеку на локальном репозиторие," +
                "то он ищет их на  http://repo1.maven.org/maven2/. Доступ общий\n" +
                "Удалённый – репозиторий, который указывает сам пользователь. " +
                "В случае если библиотеки не были обнаружены на центральном, " +
                "то поиск автоматически переходит на удаленный, если такой был указан. \n" +
                "Доступ регулируется вами. \n" +

                "9. Из каких фаз состоит жизненый цикл clean, default и site?\n" +
                "Default: validate – compile – test – packege – integration-test – verify – install – deploy\n" +
                "Clean: (pre)clean(post)\n" +
                "Site: (pre)site(post) - site-deploy.\n" +

                "10. Обьясните что такое build profile?\n" +
                "Это возможность изменять настройки проекта в зависимости от окружения.\n" +

                "11. Какой цели служат мейвен плагины?\n" +
                "Для того чтобы выполнять несколько целей за один вызов плагина. " +
                "Либо же одну из перечисленных в плагине\n" +
                "Тестирования\n" +
                "Создания jar-files.\n" +

                "12. Раскажите о всех репозиториях куда попадает артефакт после сборки командой mvn deploy?\n" +
                "Deploy это фаза из цикла default, ей предшествует фаза install и packege, " +
                "которые создают джарник и помещают его на локальный репозиторий, " +
                "поссле чего выполняется фаза деплой – файл помещается на удаленный репозиторий.\n" +

                "13. Что нужно(какие теги) для определения внешней зависимости?\n" +
                "В теге dependencies, открыть новый тег dependency и уже в нем:\n" +
                "Открывающиее и закрывающие: groupId, artifactId, scope, version, systemРath (полный путь к файлу)\n" +

                "14. Каой командой создается скелет-шаблон проекта с помошью архетипа?\n" +
                "mvn archetype:generate   \n" +

                "15. Что означает транзитивная зависимость в мейвен?\n" +
                "Означает что нам не нужно указывать библиотеки для самой зависимости и включает их автоматоматически.\n" +

                "16. Обьясните что такое область видимости зависимостей?\n" +
                "Область видимости говорит о том будет ли использоваться определенная зависимость в той или иной фазе.\n" +

                "17. Как записать ссылку на property в pom.xml файле?\n" +
                "{pom.project.property}\n" +

                "18. Для чего нужен тег execution?\n" +
                "Для того чтобы задать информацию для выполнения плагина, может включать в себя тег configuration.\n" +

                "19. Что является полным именем артефакта? \n" +
                "Теги groupId, artifactId, version\n" +

                "20. Возможна ли сборка проекта без интернета и почему если Да или Нет?\n" +
                "Да если есть все нужные зависимости на локальном репозитории, в ином случае нет. \n" +

                "21. Какой командой запустить тесты\n" +
                "mvn test\n" +

                "22. Какой командой запустить только один тест\n" +
                "mvn –Dtest=”name of test” test\n");
    }
}
